{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","_this","setState","target","value","onFormSubmit","preventDefault","props","react_default","a","createElement","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","_ref","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","src_components_VideoItem","id","videoId","VideoDetail","videoSrc","concat","description","App","selectedVideo","onTermSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","youtube","get","q","sent","data","items","stop","components_SearchBar","components_VideoDetail","components_VideoList","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.5f05e475.chunk.js","sourcesContent":["import React from 'react';\n\nclass SearchBar extends React.Component {\n\n  state = { term: '' };\n\n//callback method called with an event object, take value of input out of that event object\n//allows us to actually type in searchbar, which would otherwise be read only\n  onInputChange = event => {\n    this.setState({ term: event.target.value });\n  };\n\n  onFormSubmit = event => {\n    event.preventDefault();\n\n    // calls callback from parent component\n    this.props.onFormSubmit(this.state.term);\n  };\n\n  render(){\n    return (<div className=\"search-bar ui segment\">\n      <form onSubmit={this.onFormSubmit} className=\"ui form\">\n        <div className=\"field\">\n          <label>Video Search</label>\n          <input\n            type=\"text\"\n            value={this.state.term}\n            onChange={this.onInputChange}\n          />\n        </div>\n      </form>\n    </div>);\n  }\n}\n\nexport default SearchBar;\n","import axios from 'axios';\n\nconst KEY = 'AIzaSyCeacZoIbVVHz4at-V1OLQnOzEg1AoIucU';\n\nexport default axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3',\n  params: {\n    part: 'snippet',\n    maxResults: 5,\n    key: KEY\n  }\n});\n","import React from 'react';\nimport './VideoItem.css';\n\nconst VideoItem = ({video, onVideoSelect}) => {\n  return (\n    // event handler. calls onVideoSelect with video property onclick.\n    // we use an arrow function bc we want to call it with some argument\n    // otherwise the function will be called, but not with the video.\n    <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\n      <img alt={video.snippet.title} className=\"ui image\" src={video.snippet.thumbnails.medium.url} />\n      <div className=\"content\">\n      <div className=\"header\">{video.snippet.title}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default VideoItem;\n","import React from 'react';\nimport VideoItem from './VideoItem';\n\n// destructured\nconst VideoList = ({ videos, onVideoSelect }) => {\n\n  const renderedList = videos.map((video) => {\n\n    //video property contains all info about a video that we want to show as a list\n    return <VideoItem\n    key={video.id.videoId}\n    onVideoSelect={onVideoSelect}\n    video={video} />;\n  });\n\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>\n};\n\nexport default VideoList;\n","import React from 'react';\n\nconst VideoDetail = ({video}) => {\n  // in case it's null\n  if (!video){\n    return <div>Loading...</div>;\n  }\n\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\n\n  return (\n  <div>\n    <div className=\"ui embed\"> \n      <iframe title=\"video player\" src={videoSrc} />\n    </div>\n    <div className=\"ui segment\">\n      <h4 className=\"ui header\">{video.snippet.title}</h4>\n      <p>{video.snippet.description}</p>\n    </div>\n  </div>);\n};\n\nexport default VideoDetail;\n","import React from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from '../apis/youtube';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\n\nclass App extends React.Component {\n\n  state = { videos: [], selectedVideo: null };\n\n  //this is the default search for the application\n  componentDidMount(){\n    this.onTermSubmit('buildings');\n  }\n\n  //callback method called anytime someone submits the SearchBar form\n  //async operation, so we use that syntax\n  onTermSubmit = async term => {\n    //pre-configured instance of axios\n    //this is the entire response object, with lots of info\n    // about the request. but we only care about the data prop (items, the array\n    // of videos to be shown on the screen)\n    // we  take that list and set them as state on our component\n    const response = await youtube.get('/search', {\n      params: {\n        q: term //argument that had been passed into onTermSubmit function\n      }\n    });\n\n    this.setState({\n      videos: response.data.items,\n      // updates selected video immediately on search (first video in result set)\n      selectedVideo: response.data.items[0]\n     });\n  };\n\n  //all callback functions defined as arrow functions\n  // this video object is the object that we fetch from the youtube API\n  onVideoSelect = video => {\n    //updates state on the App class\n    this.setState({ selectedVideo: video});\n  };\n\n  render() {\n    //Videolist needs access to that array\n    return (\n      <div className=\"ui container\">\n        <SearchBar onFormSubmit={this.onTermSubmit}/>\n        <div className=\"ui grid\">\n          <div className=\"ui row\">\n            <div className=\"eleven wide column\">\n            <VideoDetail video={this.state.selectedVideo}/>\n            </div>\n            <div className=\"five wide column\">\n            <VideoList onVideoSelect={this.onVideoSelect} videos={this.state.videos} />\n            </div>\n          </div>\n        </div>\n\n      </div>);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render( <App />, document.querySelector('#root')\n);\n"],"sourceRoot":""}